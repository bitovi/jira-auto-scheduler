{"version":3,"file":"update-epics-1HVvINSk.js","sources":["../update-epics.js"],"sourcesContent":["import { StacheElement, type, ObservableObject, fromAttribute, queues } from \"./can.js\";\nimport {getDatesFromWork} from \"./simulation-data.js\";\n\nconst jiraDataFormatter = new Intl.DateTimeFormat('en-CA', { // 'en-CA' uses the YYYY-MM-DD format\n    year: 'numeric',\n    month: '2-digit', // '2-digit' will ensure month is always represented with two digits\n    day: '2-digit', // '2-digit' will ensure day is always represented with two digits\n    calendar: 'iso8601', // This specifies usage of the ISO 8601 calendar\n    timeZone: \"UTC\"\n  });\n\nclass UpdateEpics extends StacheElement {\n    static view = `\n        <form class=\"p-4 rounded\">\n            <h3 class=\"text-lg font-semibold\">Review changes</h3>\n            <div \n                class=\"grid gap-x-3 py-4\"\n                style=\"grid-template-columns: repeat(8, auto); \">\n                <div style=\"grid-row: 1; grid-column: 1 / span 2\" class=\"text-sm\"></div>\n                <div style=\"grid-row: 1; grid-column: 3 / span 2\" class=\"text-sm text-center\">Story Points</div>\n                <div style=\"grid-row: 1; grid-column: 5 / span 2\" class=\"text-sm text-center\">Start Date</div>\n                <div style=\"grid-row: 1; grid-column: 7 / span 2\" class=\"text-sm text-center\">Due Date</div>\n                <div style=\"grid-row: 2; grid-column: 1\" class=\"text-sm\">Key</div>\n                <div style=\"grid-row: 2; grid-column: 2\" class=\"text-sm\">Summary</div>\n                <div style=\"grid-row: 2; grid-column: 3\" class=\"text-sm pl-2\">Current</div>\n                <div style=\"grid-row: 2; grid-column: 4\" class=\"text-sm pr-2\">New</div>\n                <div style=\"grid-row: 2; grid-column: 5\" class=\"text-sm pl-2\">Current</div>\n                <div style=\"grid-row: 2; grid-column: 6\" class=\"text-sm pr-2\">New</div>\n                <div style=\"grid-row: 2; grid-column: 7\" class=\"text-sm pl-2\">Current</div>\n                <div style=\"grid-row: 2; grid-column: 8\" class=\"text-sm\">New</div>\n                <div \n                    class=\"border-solid border-b border-neutral-40\"\n                    style=\"grid-row: 2 / span 1; grid-column: 1 / span 8\"></div>\n                {{# for(workItem of this.workItemsWithDates) }}\n                    <div>{{workItem.work.issue[\"Issue key\"]}}</div>\n                    <div>{{workItem.work.issue.Summary}}</div>\n                    <div class=\"pl-2 text-right\">{{ this.oldStoryPoints(workItem) }}</div>\n                    <div class=\"pr-2 {{this.storyPointsEqualClassName(workItem)}} text-right\">{{ this.newStoryPoints(workItem) }}</div>\n                    <div class=\"pl-2\">{{workItem.work.issue[this.startDateField]}}</div>\n                    <div class=\"pr-2 {{this.startDateEqualClassName(workItem)}}\">{{ jiraDates( workItem.dates.startDate ) }}</div>\n                    <div class=\"pl-2\">{{workItem.work.issue[this.dueDateField]}}</div>\n                    <div class=\" {{this.dueDateEqualClassName(workItem)}}\">{{ jiraDates( workItem.dates.dueDate ) }}</div>\n                {{/ for }}\n            </div>\n            <div class=\"flex gap-2 flex-row-reverse\">\n                {{# if(this.issueUpdates.isPending) }}\n                    <button class=\"btn-primary\" disabled>\n                    <svg class=\"animate-spin -ml-0.5 -mt-0.5 mr-1 h-e w-4 text-white inline-block\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                        <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg> \n                    Saving changes in Jira\n                    \n                    </button>\n                {{/ if }}\n                {{# or(this.issueUpdates.isResolved, not(this.issueUpdates)) }}\n                    <button class=\"btn-primary\" on:click=\"this.save(scope.event)\">\n                        Save selected changes in Jira\n                    </button>\n                {{/ or }}\n                {{# if(this.issueUpdates.isRejected) }}\n                    ERROR! Check Logs!\n                {{/ if }}\n            \n                \n                <button class=\"btn-secondary\" value=\"cancel\" formmethod=\"dialog\">Cancel</button>\n            </div>\n        </form>\n    `;\n    static props = {\n        workItems: type.Any,\n        storyPointField: String,\n        startDateField: String,\n        dueDateField: String,\n        startDate: Date,\n        updatePromises: type.Any,\n        issueUpdates: type.Any,\n        jiraHelpers: type.Any\n    };\n    connected(){\n        // this isn't great, but easy\n        this.parentElement.showModal();\n    }\n    get workItemsWithDates(){\n        return Object.values(this.workItems).map( (workItem)=> {\n            const clone = workItem.serialize();\n            clone.dates = getDatesFromWork(clone, this.startDate);\n            return clone;\n        }) \n    }\n    jiraDates(date){\n        return jiraDataFormatter.format(date)\n    }\n    round(number) {\n        return Math.round(number)\n    }\n    oldStoryPoints(workItem) {\n        return workItem.work.issue[this.storyPointField];\n    }\n    newStoryPoints(workItem) {\n        return Math.round( workItem.dates.totalPoints );\n    }\n    storyPointsEqualClassName(workItem) {\n        return this.oldStoryPoints(workItem) !== this.newStoryPoints(workItem) ? \"bg-yellow-300\" : \"\";\n    }\n    startDateEqualClassName(workItem) {\n        return workItem.work.issue[this.startDateField] !== this.jiraDates( workItem.dates.startDate ) ? \"bg-yellow-300\" : \"\";\n    }\n    dueDateEqualClassName(workItem) {\n        return workItem.work.issue[this.dueDateField] !== this.jiraDates( workItem.dates.dueDate ) ? \"bg-yellow-300\" : \"\";\n    }\n\n    save(event){\n        event.preventDefault();\n\n        const allWork = this.workItemsWithDates.map( workItem => {\n          return {\n            ...workItem,\n            updates: {\n              [this.startDateField]: this.jiraDates( workItem.dates.startDate ),\n              [this.dueDateField]: this.jiraDates( workItem.dates.dueDate ),\n              [this.storyPointField]: this.newStoryPoints(workItem)\n            }\n          };\n        });\n  \n      const changedWork = allWork/*.filter((work) => {\n        return work.issue[\"Start date\"] !== work.updates[\"Start date\"]  \n          || work.issue[\"Due date\"] !== work.updates[\"Due date\"] \n          || work.issue[\"Story points\"] !== work.updates[\"Story points\"];\n      });*/\n      console.log(allWork);\n      const updates = changedWork.map( workItem => {\n        return {\n            ...workItem,\n            updatePromise: this.jiraHelpers.editJiraIssueWithNamedFields(workItem.work.issue[\"Issue key\"], workItem.updates)\n        }\n      })\n      this.issueUpdates = Promise.allSettled(updates.map( update => update.updatePromise));\n      this.issueUpdates\n        .then(()=> {\n            console.log(\"SAVED\");\n            this.dispatch(\"saved\");\n        })\n        .catch(e => {\n            console.log(e)\n        })\n    }\n}\n\nexport default UpdateEpics;\n\ncustomElements.define(\"update-epics\", UpdateEpics);"],"names":["jiraDataFormatter","Intl","DateTimeFormat","year","month","day","calendar","timeZone","UpdateEpics","StacheElement","static","workItems","type","Any","storyPointField","String","startDateField","dueDateField","startDate","Date","updatePromises","issueUpdates","jiraHelpers","connected","this","parentElement","showModal","workItemsWithDates","Object","values","map","workItem","clone","serialize","dates","getDatesFromWork","jiraDates","date","format","round","number","Math","oldStoryPoints","work","issue","newStoryPoints","totalPoints","storyPointsEqualClassName","startDateEqualClassName","dueDateEqualClassName","dueDate","save","event","preventDefault","allWork","updates","changedWork","console","log","updatePromise","editJiraIssueWithNamedFields","Promise","allSettled","update","then","dispatch","catch","e","customElements","define"],"mappings":"qDAGA,MAAMA,EAAoB,IAAIC,KAAKC,eAAe,QAAS,CACvDC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,SAAU,UACVC,SAAU,QAGd,MAAMC,UAAoBC,EACtBC,YAAc,iwHAyDdA,aAAe,CACXC,UAAWC,EAAKC,IAChBC,gBAAiBC,OACjBC,eAAgBD,OAChBE,aAAcF,OACdG,UAAWC,KACXC,eAAgBR,EAAKC,IACrBQ,aAAcT,EAAKC,IACnBS,YAAaV,EAAKC,KAEtB,SAAAU,GAEIC,KAAKC,cAAcC,WACtB,CACD,sBAAIC,GACA,OAAOC,OAAOC,OAAOL,KAAKb,WAAWmB,KAAMC,IACvC,MAAMC,EAAQD,EAASE,YAEvB,OADAD,EAAME,MAAQC,EAAiBH,EAAOR,KAAKN,WACpCc,CAAK,GAEnB,CACD,SAAAI,CAAUC,GACN,OAAOrC,EAAkBsC,OAAOD,EACnC,CACD,KAAAE,CAAMC,GACF,OAAOC,KAAKF,MAAMC,EACrB,CACD,cAAAE,CAAeX,GACX,OAAOA,EAASY,KAAKC,MAAMpB,KAAKV,gBACnC,CACD,cAAA+B,CAAed,GACX,OAAOU,KAAKF,MAAOR,EAASG,MAAMY,YACrC,CACD,yBAAAC,CAA0BhB,GACtB,OAAOP,KAAKkB,eAAeX,KAAcP,KAAKqB,eAAed,GAAY,gBAAkB,EAC9F,CACD,uBAAAiB,CAAwBjB,GACpB,OAAOA,EAASY,KAAKC,MAAMpB,KAAKR,kBAAoBQ,KAAKY,UAAWL,EAASG,MAAMhB,WAAc,gBAAkB,EACtH,CACD,qBAAA+B,CAAsBlB,GAClB,OAAOA,EAASY,KAAKC,MAAMpB,KAAKP,gBAAkBO,KAAKY,UAAWL,EAASG,MAAMgB,SAAY,gBAAkB,EAClH,CAED,IAAAC,CAAKC,GACDA,EAAMC,iBAEN,MAAMC,EAAU9B,KAAKG,mBAAmBG,KAAKC,IACpC,IACFA,EACHwB,QAAS,CACP,CAAC/B,KAAKR,gBAAiBQ,KAAKY,UAAWL,EAASG,MAAMhB,WACtD,CAACM,KAAKP,cAAeO,KAAKY,UAAWL,EAASG,MAAMgB,SACpD,CAAC1B,KAAKV,iBAAkBU,KAAKqB,eAAed,QAK9CyB,EAAcF,EAKpBG,QAAQC,IAAIJ,GACZ,MAAMC,EAAUC,EAAY1B,KAAKC,IACxB,IACAA,EACH4B,cAAenC,KAAKF,YAAYsC,6BAA6B7B,EAASY,KAAKC,MAAM,aAAcb,EAASwB,aAG9G/B,KAAKH,aAAewC,QAAQC,WAAWP,EAAQzB,KAAKiC,GAAUA,EAAOJ,iBACrEnC,KAAKH,aACF2C,MAAK,KACFP,QAAQC,IAAI,SACZlC,KAAKyC,SAAS,QAAQ,IAEzBC,OAAMC,IACHV,QAAQC,IAAIS,EAAE,GAErB,EAKLC,eAAeC,OAAO,eAAgB7D"}